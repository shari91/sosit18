<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:f="http://xmlns.jcp.org/jsf/core">
    <ui:composition template="/templates/page.xhtml">
        <ui:param name="pageTitle" value="Asset list - SosIT"/>
        <ui:define name="main">
            <b:panel title="Asset list" collapsible="false">
                <f:view>
                    <f:metadata>
                        <f:viewAction action="#{assetController.onload()}"/>
                    </f:metadata>
                </f:view>
                <b:form>
                    <b:panelGrid colSpans="3,9">
                        <b:formGroup id="fgfilter" style-class="filterform bg-info">
                            <h3 class="text-center">Filter</h3>
                            <b:label value="Company"/>
                            <b:selectOneMenu value="#{auth.gewoneUser ? auth.user.companyid.name : companyController.company.name}" 
                                             disabled="#{auth.gewoneUser}"
                                             onchange="AssetTableWidget.DataTable().search(this.value).draw();">
                                <f:selectItem itemLabel="Select a company"/>
                                <f:selectItems value="#{companyController.listAllCompanies()}"
                                               var="company"
                                               itemLabel="#{company.name}"
                                               itemValue="#{company.name}"/>
                            </b:selectOneMenu>
                            <b:label value="Assetgroup"/>
                            <b:selectOneMenu value="#{assetgroupController.assetgroup}" 
                                             onchange="AssetTableWidget.DataTable().search(this.value).draw();">
                                <f:selectItem itemLabel="Select an assetgroup"/>
                                <f:selectItems value="#{assetgroupController.listAllAssetgroups()}"
                                               var="assetgroup"
                                               itemLabel="#{assetgroup.description}"
                                               itemValue="#{assetgroup.description}"/>
                            </b:selectOneMenu>
                            <b:label value="Purchase date"/>
                            <b:dateTimePicker show-time="false"
                                              onblur="AssetTableWidget.DataTable().search(this.value).draw();"/>
                        </b:formGroup>
                        <b:formGroup>
                            <b:dataTable value="#{auth.gewoneUser ? assetController.findAssetsByCompany(auth.user.companyid) : assetController.listAll()}"
                                         var="asset"
                                         class="editableAssetTable"
                                         widgetVar="AssetTableWidget"
                                         fixedHeader="true"
                                         responsive="false"
                                         scroll-x="true"
                                         save-state='false'
                                         columnVisibility="true"
                                         row-group="rowGroup:{dataSrc:1,startRender:function ( rows, group ) {return 'Company '+ group +': '+rows.count()+' assets';},endRender:null}">
                                <b:dataTableColumn value="#{asset.assetid}"/>
                                <b:dataTableColumn value="#{asset.companyid.name}" label="Company" order="asc"/>
                                <b:dataTableColumn label="Assetgroup">
                                    <h:outputText value="#{asset.assetgroupid.description}" rendered="#{not assetController.isRowEditable(asset)}" />
                                    <b:selectOneMenu value="#{assetController.asset.assetgroupid}" 
                                                     rendered="#{assetController.isRowEditable(asset)}">
                                        <f:selectItems value="#{assetgroupController.listAllAssetgroups()}"
                                                       var="assetgroup"
                                                       itemLabel="#{assetgroup.description}"
                                                       itemValue="#{assetgroup}"/>
                                    </b:selectOneMenu>
                                </b:dataTableColumn>
                                <b:dataTableColumn label="Name">
                                    <h:outputText value="#{asset.name}" rendered="#{not assetController.isRowEditable(asset)}" />
                                    <b:inputText value="#{assetController.asset.name}" rendered="#{assetController.isRowEditable(asset)}"/>
                                </b:dataTableColumn>
                                <b:dataTableColumn label="Description" >
                                    <h:outputText value="#{asset.description}" rendered="#{not assetController.isRowEditable(asset)}" />
                                    <b:inputText value="#{assetController.asset.description}" rendered="#{assetController.isRowEditable(asset)}"/>
                                </b:dataTableColumn>
                                <b:dataTableColumn label="" searchable="false" orderable="false" style-class="colButtons">
                                    <b:button icon="pencil" outcome="asset" 
                                              tooltip="Edit">
                                        <f:param name="ID" value="#{asset.assetid}"/>
                                    </b:button>
                                    <b:commandButton icon="remove"
                                                     tooltip="#{assetController.getTooltipRemoveAsset(asset)}"
                                                     action="#{assetController.erase(asset)}"
                                                     rendered="#{auth.rights(false, false, true)}"
                                                     disabled="#{!assetController.canDeleteAsset(asset)}"
                                                     onclick="return confirm('Are you sure you want to delete &quot;#{asset.name}&quot;?')"/>
                                </b:dataTableColumn>
                                <b:dataTableColumn value="#{asset.assetlocationid.description}" label="Location"/>
                                <b:dataTableColumn value="#{asset.assetmasterid.name}" label="Asset master"/>
                                <b:dataTableColumn label="Date of Purchase" 
                                                   data-order="#{asset.purchasedate.getTime()}" data-type="numeric">
                                    <h:outputText value="#{asset.purchasedate}">
                                        <f:convertDateTime pattern="dd/MM/yyyy" />
                                    </h:outputText>	
                                </b:dataTableColumn>
                                <b:dataTableColumn value="#{asset.warranty}"/>
                                <b:dataTableColumn value="#{asset.supportcontract}" label="Support Contract" />
                                <b:dataTableColumn value="#{asset.value}"/>
                                <b:dataTableColumn value="#{asset.assetCollection.size()}" label="Aantal subassets"/>
                            </b:dataTable>
                        </b:formGroup>
                    </b:panelGrid>
                </b:form>
            </b:panel>
            <b:form>
                <b:commandButton value="Add new asset" look="warning" style-class="new"
                                 action="#{assetController.loadCreateAsset()}"
                                 rendered="#{auth.debugMode or auth.supporter or auth.admin}"/>
            </b:form>
            <script>$(document).ready(function () {
                    AssetTableWidget.DataTable().columns([-7,-6,-5,-4,-3,-2,-1]).visible(false);
                });</script>
        </ui:define>
    </ui:composition>
</html>

